def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}


def flutterMinSdkVersionCode = localProperties.getProperty('flutter.minSdkVersionCode')
if (flutterMinSdkVersionCode == null) {
    flutterMinSdkVersionCode = '21'
}

def flutterTargetSdkVersionCode = localProperties.getProperty('flutter.targetSdkVersionCode')
if (flutterTargetSdkVersionCode == null) {
    flutterTargetSdkVersionCode = '30'
}

def flutterCompileSdkVersionCode = localProperties.getProperty('flutter.compileSdkVersionCode')
if (flutterCompileSdkVersionCode == null) {
    flutterCompileSdkVersionCode = '33'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutterCompileSdkVersionCode.toInteger()
    ndkVersion flutter.ndkVersion

    signingConfigs {
        release {
            //将打包信息放在../gradle.properties 中
            storeFile file(RELEASE_STOREFILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.weekly.crazyenglish"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion flutterMinSdkVersionCode.toInteger()
        targetSdkVersion flutterTargetSdkVersionCode.toInteger()
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
//            , 'x86', 'x86_64', 'mips', 'mips64'
            // 还可以添加
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
//            shrinkResources false
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}
